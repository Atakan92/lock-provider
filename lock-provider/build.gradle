plugins {
    id 'java-library'
}

apply from: "${rootProject.rootDir}/gradle/tests.gradle"
apply from: "${rootProject.rootDir}/gradle/publishing.gradle"

def isSnapshot = Boolean.parseBoolean(System.getenv("SNAPSHOT_RELEASE"))

group = 'com.inomera.telco.commons'
version = rootProject.file('VERSION').text.trim() + (isSnapshot ? "-SNAPSHOT" : "")
sourceCompatibility = '1.8'
targetCompatibility = 1.8

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    testImplementation {
        extendsFrom compileOnly
    }
}

compileJava.dependsOn(processResources)

dependencies {
    compile "commons-lang:commons-lang:2.4"
    compileOnly "com.hazelcast:hazelcast-client:3.12"
    compileOnly 'org.redisson:redisson:3.14.0'

    testImplementation('org.junit.jupiter:junit-jupiter-api:5.2.0')
    testCompile('org.junit.jupiter:junit-jupiter-params:5.2.0')
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.2.0')
    testCompile "org.mockito:mockito-core:2.23.4"
    testCompile('org.mockito:mockito-junit-jupiter:2.18.3')
    testCompile('org.hamcrest:hamcrest-all:1.3')
    testCompile('com.google.guava:guava:27.0.1-jre')
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = "${project.group}"
            artifactId = "${project.name}"
            version = "${project.version}"

            from components.java
            artifact tasks.sourceJar

            pom {
                name = 'lock-provider'
                description = 'Distributed locks made easy'
                url = 'https://github.com/inomera/lock-provider'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'http://www.opensource.org/licenses/mit-license.php'
                    }
                }
                developers {
                    developer {
                        id = 'sedran'
                        name = 'Serdar Kuzucu'
                        organization = 'Inomera'
                        organizationUrl = 'https://inomera.com/'
                    }
                    developer {
                        id = 'TurgayCan'
                        name = 'Turgay Can'
                        organization = 'Inomera'
                        organizationUrl = 'https://inomera.com/'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/inomera/lock-provider.git'
                    developerConnection = 'scm:git:https://github.com/inomera/lock-provider.git'
                    url = 'https://github.com/inomera/lock-provider'
                }
            }
        }
    }
}
